{
    "Metadata": {
        "Title": "go-owndoc",
        "Version": "0.0.3",
        "GeneratorVersion": "0.0.3",
        "URL": "https://github.com/ghetzel/go-owndoc"
    },
    "PackageList": [
        {
            "Name": "main",
            "CanonicalImportPath": "github.com/ghetzel/go-owndoc",
            "ImportPath": "main",
            "ParentPackage": "",
            "URL": "https://github.com/ghetzel/go-owndoc",
            "Synopsis": "",
            "MainFunction": false,
            "CommentWordCount": 355,
            "LineCount": 2658,
            "SourceLineCount": 2341,
            "FunctionCount": 11,
            "TypeCount": 15,
            "ConstantCount": 2,
            "VariableCount": 6,
            "Statistics": {
                "Mean": 0.2281,
                "StdDev": 0.3833,
                "GeometricMean": 0,
                "HarmonicMean": 0.9231,
                "Median": 0,
                "Minimum": 0,
                "Maximum": 1
            }
        }
    ],
    "Package": {
        "Name": "main",
        "CanonicalImportPath": "github.com/ghetzel/go-owndoc",
        "ImportPath": "main",
        "ParentPackage": "",
        "URL": "https://github.com/ghetzel/go-owndoc",
        "Synopsis": "",
        "MainFunction": false,
        "CommentWordCount": 355,
        "LineCount": 2658,
        "SourceLineCount": 2341,
        "FunctionCount": 11,
        "TypeCount": 15,
        "ConstantCount": 2,
        "VariableCount": 6,
        "Statistics": {
            "Mean": 0.2281,
            "StdDev": 0.3833,
            "GeometricMean": 0,
            "HarmonicMean": 0.9231,
            "Median": 0,
            "Minimum": 0,
            "Maximum": 1
        },
        "Files": [
            {
                "Name": "file.go",
                "Imports": [
                    {
                        "PackageName": "bytes",
                        "Alias": "bytes"
                    },
                    {
                        "PackageName": "encoding/base64",
                        "Alias": "base64"
                    },
                    {
                        "PackageName": "fmt",
                        "Alias": "fmt"
                    },
                    {
                        "PackageName": "go/ast",
                        "Alias": "ast"
                    },
                    {
                        "PackageName": "go/format",
                        "Alias": "format"
                    },
                    {
                        "PackageName": "go/token",
                        "Alias": "token"
                    },
                    {
                        "PackageName": "path/filepath",
                        "Alias": "filepath"
                    },
                    {
                        "PackageName": "sort",
                        "Alias": "sort"
                    },
                    {
                        "PackageName": "strings",
                        "Alias": "strings"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/log",
                        "Alias": "log"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/stringutil",
                        "Alias": "stringutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                        "Alias": "typeutil"
                    }
                ],
                "Size": 11954,
                "LineCount": 462,
                "SourceLineCount": 339,
                "FunctionCount": 0,
                "TypeCount": 7,
                "ConstantCount": 1,
                "VariableCount": 0
            },
            {
                "Name": "main.go",
                "Imports": [
                    {
                        "PackageName": "encoding/json",
                        "Alias": "json"
                    },
                    {
                        "PackageName": "os",
                        "Alias": "os"
                    },
                    {
                        "PackageName": "github.com/ghetzel/cli",
                        "Alias": "cli"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/log",
                        "Alias": "log"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/maputil",
                        "Alias": "maputil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/stringutil",
                        "Alias": "stringutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                        "Alias": "typeutil"
                    }
                ],
                "Size": 2185,
                "LineCount": 93,
                "SourceLineCount": 81,
                "FunctionCount": 0,
                "TypeCount": 0,
                "ConstantCount": 0,
                "VariableCount": 0
            },
            {
                "Name": "module.go",
                "Imports": [
                    {
                        "PackageName": "encoding/json",
                        "Alias": "json"
                    },
                    {
                        "PackageName": "errors",
                        "Alias": "errors"
                    },
                    {
                        "PackageName": "os",
                        "Alias": "os"
                    },
                    {
                        "PackageName": "path/filepath",
                        "Alias": "filepath"
                    },
                    {
                        "PackageName": "sort",
                        "Alias": "sort"
                    },
                    {
                        "PackageName": "github.com/mcuadros/go-defaults",
                        "Alias": "go-defaults"
                    }
                ],
                "Size": 2212,
                "LineCount": 117,
                "SourceLineCount": 95,
                "FunctionCount": 2,
                "TypeCount": 4,
                "ConstantCount": 1,
                "VariableCount": 0
            },
            {
                "Name": "package.go",
                "Imports": [
                    {
                        "PackageName": "fmt",
                        "Alias": "fmt"
                    },
                    {
                        "PackageName": "go/ast",
                        "Alias": "ast"
                    },
                    {
                        "PackageName": "go/doc",
                        "Alias": "doc"
                    },
                    {
                        "PackageName": "go/parser",
                        "Alias": "parser"
                    },
                    {
                        "PackageName": "go/token",
                        "Alias": "token"
                    },
                    {
                        "PackageName": "io/ioutil",
                        "Alias": "ioutil"
                    },
                    {
                        "PackageName": "os",
                        "Alias": "os"
                    },
                    {
                        "PackageName": "path/filepath",
                        "Alias": "filepath"
                    },
                    {
                        "PackageName": "sort",
                        "Alias": "sort"
                    },
                    {
                        "PackageName": "strings",
                        "Alias": "strings"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/fileutil",
                        "Alias": "fileutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/log",
                        "Alias": "log"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/mathutil",
                        "Alias": "mathutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/rxutil",
                        "Alias": "rxutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/sliceutil",
                        "Alias": "sliceutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/stringutil",
                        "Alias": "stringutil"
                    },
                    {
                        "PackageName": "github.com/montanaflynn/stats",
                        "Alias": "stats"
                    },
                    {
                        "PackageName": "golang.org/x/tools/go/vcs",
                        "Alias": "vcs"
                    }
                ],
                "Size": 9335,
                "LineCount": 368,
                "SourceLineCount": 295,
                "FunctionCount": 2,
                "TypeCount": 3,
                "ConstantCount": 0,
                "VariableCount": 5
            },
            {
                "Name": "render.go",
                "Imports": [
                    {
                        "PackageName": "encoding/json",
                        "Alias": "json"
                    },
                    {
                        "PackageName": "fmt",
                        "Alias": "fmt"
                    },
                    {
                        "PackageName": "net/http",
                        "Alias": "http"
                    },
                    {
                        "PackageName": "net/http/httptest",
                        "Alias": "httptest"
                    },
                    {
                        "PackageName": "os",
                        "Alias": "os"
                    },
                    {
                        "PackageName": "path/filepath",
                        "Alias": "filepath"
                    },
                    {
                        "PackageName": "github.com/ghetzel/diecast",
                        "Alias": "diecast"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/fileutil",
                        "Alias": "fileutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/httputil",
                        "Alias": "httputil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/log",
                        "Alias": "log"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/maputil",
                        "Alias": "maputil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/stringutil",
                        "Alias": "stringutil"
                    },
                    {
                        "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                        "Alias": "typeutil"
                    },
                    {
                        "PackageName": "github.com/mcuadros/go-defaults",
                        "Alias": "go-defaults"
                    }
                ],
                "Size": 4618,
                "LineCount": 179,
                "SourceLineCount": 146,
                "FunctionCount": 1,
                "TypeCount": 1,
                "ConstantCount": 0,
                "VariableCount": 1
            },
            {
                "Name": "static.go",
                "Imports": [
                    {
                        "PackageName": "bytes",
                        "Alias": "bytes"
                    },
                    {
                        "PackageName": "compress/gzip",
                        "Alias": "gzip"
                    },
                    {
                        "PackageName": "encoding/base64",
                        "Alias": "base64"
                    },
                    {
                        "PackageName": "io/ioutil",
                        "Alias": "ioutil"
                    },
                    {
                        "PackageName": "net/http",
                        "Alias": "http"
                    },
                    {
                        "PackageName": "os",
                        "Alias": "os"
                    },
                    {
                        "PackageName": "path",
                        "Alias": "path"
                    },
                    {
                        "PackageName": "sync",
                        "Alias": "sync"
                    },
                    {
                        "PackageName": "time",
                        "Alias": "time"
                    }
                ],
                "Size": 98072,
                "LineCount": 1439,
                "SourceLineCount": 1385,
                "FunctionCount": 6,
                "TypeCount": 0,
                "ConstantCount": 0,
                "VariableCount": 0
            }
        ],
        "Constants": [
            {
                "Name": "CommentExportedFields",
                "Immutable": true,
                "Expression": "`// contains filtered or unexported fields`",
                "Value": "// contains filtered or unexported fields"
            },
            {
                "Name": "Version",
                "Immutable": true,
                "Expression": "`0.0.3`",
                "Value": "0.0.3"
            }
        ],
        "Variables": [
            {
                "Name": "IdealWordCountFunc",
                "Type": "float64",
                "Expression": "10",
                "Comment": "Ideal number of words used to describe function and struct method definitions."
            },
            {
                "Name": "IdealWordCountStruct",
                "Type": "float64",
                "Expression": "15",
                "Comment": "Ideal number of words per struct declaration."
            },
            {
                "Name": "IdealWordCountStructField",
                "Type": "float64",
                "Expression": "10",
                "Comment": "Ideal number of words used to describe struct fields."
            },
            {
                "Name": "IdealWordCountVar",
                "Type": "float64",
                "Expression": "8",
                "Comment": "Ideal number of words used to describe package variables."
            },
            {
                "Name": "MaxExpressionSnippetLength",
                "Expression": "64"
            },
            {
                "Name": "SkipAssets"
            }
        ],
        "Functions": [
            {
                "Name": "Dir",
                "Comment": "Dir returns a http.Filesystem for the embedded assets on a given prefix dir.\nIf useLocal is true, the filesystem's contents are instead used.",
                "Arguments": [
                    {
                        "Name": "useLocal",
                        "Type": "bool"
                    },
                    {
                        "Name": "name",
                        "Type": "string"
                    }
                ],
                "Returns": [
                    {
                        "Type": "http.FileSystem"
                    }
                ],
                "Signature": "Dir(useLocal bool, name string) http.FileSystem",
                "Source": "ewoJaWYgdXNlTG9jYWwgewoJCXJldHVybiBfZXNjRGlyZWN0b3J5e2ZzOiBfZXNjTG9jYWwsIG5hbWU6IG5hbWV9Cgl9CglyZXR1cm4gX2VzY0RpcmVjdG9yeXtmczogX2VzY1N0YXRpYywgbmFtZTogbmFtZX0KfQ==",
                "IsPackageLevel": true
            },
            {
                "Name": "FS",
                "Comment": "FS returns a http.Filesystem for the embedded assets. If useLocal is true,\nthe filesystem's contents are instead used.",
                "Arguments": [
                    {
                        "Name": "useLocal",
                        "Type": "bool"
                    }
                ],
                "Returns": [
                    {
                        "Type": "http.FileSystem"
                    }
                ],
                "Signature": "FS(useLocal bool) http.FileSystem",
                "Source": "ewoJaWYgdXNlTG9jYWwgewoJCXJldHVybiBfZXNjTG9jYWwKCX0KCXJldHVybiBfZXNjU3RhdGljCn0=",
                "IsPackageLevel": true
            },
            {
                "Name": "FSByte",
                "Comment": "FSByte returns the named file from the embedded assets. If useLocal is\ntrue, the filesystem's contents are instead used.",
                "Arguments": [
                    {
                        "Name": "useLocal",
                        "Type": "bool"
                    },
                    {
                        "Name": "name",
                        "Type": "string"
                    }
                ],
                "Returns": [
                    {
                        "Type": "[]byte"
                    },
                    {
                        "Type": "error"
                    }
                ],
                "Signature": "FSByte(useLocal bool, name string) ([]byte, error)",
                "Source": "ewoJaWYgdXNlTG9jYWwgewoJCWYsIGVyciA6PSBfZXNjTG9jYWwuT3BlbihuYW1lKQoJCWlmIGVyciAhPSBuaWwgewoJCQlyZXR1cm4gbmlsLCBlcnIKCQl9CgkJYiwgZXJyIDo9IGlvdXRpbC5SZWFkQWxsKGYpCgkJXyA9IGYuQ2xvc2UoKQoJCXJldHVybiBiLCBlcnIKCX0KCWYsIGVyciA6PSBfZXNjU3RhdGljLnByZXBhcmUobmFtZSkKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiBuaWwsIGVycgoJfQoJcmV0dXJuIGYuZGF0YSwgbmlsCn0=",
                "IsPackageLevel": true
            },
            {
                "Name": "FSMustByte",
                "Comment": "FSMustByte is the same as FSByte, but panics if name is not present.",
                "Arguments": [
                    {
                        "Name": "useLocal",
                        "Type": "bool"
                    },
                    {
                        "Name": "name",
                        "Type": "string"
                    }
                ],
                "Returns": [
                    {
                        "Type": "[]byte"
                    }
                ],
                "Signature": "FSMustByte(useLocal bool, name string) []byte",
                "Source": "ewoJYiwgZXJyIDo9IEZTQnl0ZSh1c2VMb2NhbCwgbmFtZSkKCWlmIGVyciAhPSBuaWwgewoJCXBhbmljKGVycikKCX0KCXJldHVybiBiCn0=",
                "IsPackageLevel": true
            },
            {
                "Name": "FSMustString",
                "Comment": "FSMustString is the string version of FSMustByte.",
                "Arguments": [
                    {
                        "Name": "useLocal",
                        "Type": "bool"
                    },
                    {
                        "Name": "name",
                        "Type": "string"
                    }
                ],
                "Returns": [
                    {
                        "Type": "string"
                    }
                ],
                "Signature": "FSMustString(useLocal bool, name string) string",
                "Source": "ewoJcmV0dXJuIHN0cmluZyhGU011c3RCeXRlKHVzZUxvY2FsLCBuYW1lKSkKfQ==",
                "IsPackageLevel": true
            },
            {
                "Name": "FSString",
                "Comment": "FSString is the string version of FSByte.",
                "Arguments": [
                    {
                        "Name": "useLocal",
                        "Type": "bool"
                    },
                    {
                        "Name": "name",
                        "Type": "string"
                    }
                ],
                "Returns": [
                    {
                        "Type": "string"
                    },
                    {
                        "Type": "error"
                    }
                ],
                "Signature": "FSString(useLocal bool, name string) (string, error)",
                "Source": "ewoJYiwgZXJyIDo9IEZTQnl0ZSh1c2VMb2NhbCwgbmFtZSkKCXJldHVybiBzdHJpbmcoYiksIGVycgp9",
                "IsPackageLevel": true
            },
            {
                "Name": "GetImportPathFromDir",
                "Arguments": [
                    {
                        "Name": "dir",
                        "Type": "string"
                    },
                    {
                        "Name": "srcRoot",
                        "Type": "string"
                    }
                ],
                "Returns": [
                    {
                        "Type": "string"
                    },
                    {
                        "Type": "error"
                    }
                ],
                "Signature": "GetImportPathFromDir(dir string, srcRoot string) (string, error)",
                "Source": "ewoJaWYgXywgcm9vdCwgZXJyIDo9IHZjcy5Gcm9tRGlyKGRpciwgc3JjUm9vdCk7IGVyciA9PSBuaWwgewoJCXJldHVybiByb290LCBuaWwKCX0gZWxzZSB7CgkJcmV0dXJuIGBgLCBlcnIKCX0KfQ==",
                "IsPackageLevel": true
            },
            {
                "Name": "RenderHTML",
                "Comment": "Renders the provided module as a static website in the target directory.",
                "Arguments": [
                    {
                        "Name": "module",
                        "Type": "*Module"
                    },
                    {
                        "Name": "options",
                        "Type": "*RenderOptions"
                    }
                ],
                "Returns": [
                    {
                        "Type": "error"
                    }
                ],
                "Signature": "RenderHTML(module *Module, options *RenderOptions) error",
                "Source": "ewoJaWYgb3B0aW9ucyA9PSBuaWwgewoJCW9wdGlvbnMgPSBuZXcoUmVuZGVyT3B0aW9ucykKCX0KCWRlZmF1bHRzLlNldERlZmF1bHRzKG9wdGlvbnMpCglpZiBtb2R1bGUgPT0gbmlsIHx8IG1vZHVsZS5QYWNrYWdlID09IG5pbCB7CgkJcmV0dXJuIGZtdC5FcnJvcmYoImNhbm5vdCByZW5kZXIgZW1wdHkgbW9kdWxlIikKCX0KCWlmIGZpbGV1dGlsLkRpckV4aXN0cyhvcHRpb25zLlRhcmdldERpcikgewoJCWlmIGVyciA6PSBvcy5SZW1vdmVBbGwob3B0aW9ucy5UYXJnZXREaXIpOyBlcnIgIT0gbmlsIHsKCQkJcmV0dXJuIGVycgoJCX0KCX0gZWxzZSBpZiBmaWxldXRpbC5GaWxlRXhpc3RzKG9wdGlvbnMuVGFyZ2V0RGlyKSB7CgkJcmV0dXJuIGZtdC5FcnJvcmYoInRhcmdldCBwYXRoIGV4aXN0cyBhbmQgaXMgYSBmaWxlIikKCX0KCWlmIGVyciA6PSBvcy5Na2RpckFsbChvcHRpb25zLlRhcmdldERpciwgMDc1NSk7IGVyciAhPSBuaWwgewoJCXJldHVybiBlcnIKCX0KCXNlcnZlciA6PSBkaWVjYXN0Lk5ld1NlcnZlcihuaWwpCglzZXJ2ZXIuQWRkcmVzcyA9IGBsb2NhbGhvc3Q6MGAKCXNlcnZlci5WZXJpZnlGaWxlID0gYC9fbGF5b3V0cy9kZWZhdWx0Lmh0bWxgCglzZXJ2ZXIuT3ZlcnJpZGVQYWdlT2JqZWN0ID0gb3B0aW9ucy5Qcm9wZXJ0aWVzCglpZiB1aSA6PSBvcy5HZXRlbnYoYE9XTkRPQ19VSWApOyBmaWxldXRpbC5EaXJFeGlzdHModWkpIHsKCQlzZXJ2ZXIuUm9vdFBhdGggPSB1aQoJfSBlbHNlIHsKCQlzZXJ2ZXIuU2V0RmlsZVN5c3RlbShGUyhmYWxzZSkpCgl9CglzZXJ2ZXIuR2V0KGAvbW9kdWxlLmpzb25gLCBmdW5jKHcgaHR0cC5SZXNwb25zZVdyaXRlciwgcmVxICpodHRwLlJlcXVlc3QpIHsKCQl3LkhlYWRlcigpLlNldChgQ29udGVudC1UeXBlYCwgYGFwcGxpY2F0aW9uL2pzb25gKQoJCWVuYyA6PSBqc29uLk5ld0VuY29kZXIodykKCQllbmMuU2V0SW5kZW50KGBgLCBgICAgIGApCgkJZW5jLkVuY29kZShtb2R1bGUpCgl9KQoJc2VydmVyLkdldChgL3BhY2thZ2UuanNvbmAsIGZ1bmModyBodHRwLlJlc3BvbnNlV3JpdGVyLCByZXEgKmh0dHAuUmVxdWVzdCkgewoJCXcuSGVhZGVyKCkuU2V0KGBDb250ZW50LVR5cGVgLCBgYXBwbGljYXRpb24vanNvbmApCgkJaWYgcGtnIDo9IGh0dHB1dGlsLlEocmVxLCBgcGFja2FnZWApOyBwa2cgIT0gYGAgewoJCQl2YXIgZm91bmQgKlBhY2thZ2UKCQkJaWYgZXJyIDo9IG1vZHVsZS5XYWxrKGZ1bmMocCAqUGFja2FnZSkgZXJyb3IgewoJCQkJaWYgcC5JbXBvcnRQYXRoID09IHBrZyB8fCBwLk5hbWUgPT0gcGtnIHsKCQkJCQlmb3VuZCA9IHAKCQkJCQlyZXR1cm4gc3RvcAoJCQkJfSBlbHNlIHsKCQkJCQlyZXR1cm4gbmlsCgkJCQl9CgkJCX0pOyBlcnIgPT0gbmlsICYmIGZvdW5kICE9IG5pbCB7CgkJCQllbmMgOj0ganNvbi5OZXdFbmNvZGVyKHcpCgkJCQllbmMuU2V0SW5kZW50KGBgLCBgICAgIGApCgkJCQllbmMuRW5jb2RlKGZvdW5kKQoJCQl9IGVsc2UgaWYgZm91bmQgPT0gbmlsIHsKCQkJCWh0dHAuRXJyb3IodywgZm10LlNwcmludGYoInBhY2thZ2UgJXEgbm90IGZvdW5kIiwgcGtnKSwgaHR0cC5TdGF0dXNOb3RGb3VuZCkKCQkJfSBlbHNlIHsKCQkJCWh0dHAuRXJyb3IodywgZXJyLkVycm9yKCksIGh0dHAuU3RhdHVzTm90Rm91bmQpCgkJCX0KCQl9IGVsc2UgewoJCQlodHRwLkVycm9yKHcsIGBNdXN0IHByb3ZpZGUgP3BhY2thZ2UgcGFyYW1ldGVyYCwgaHR0cC5TdGF0dXNCYWRSZXF1ZXN0KQoJCX0KCX0pCglyZXR1cm4gc2VydmVyLlNlcnZlKGZ1bmMocyAqZGllY2FzdC5TZXJ2ZXIpIGVycm9yIHsKCQlzLkJpbmRpbmdQcmVmaXggPSBgaHR0cDovL2AgKyBzLkFkZHJlc3MKCQlmb3IgXywgYXNzZXQgOj0gcmFuZ2UgbWFwdXRpbC5TdHJpbmdLZXlzKF9lc2NEYXRhKSB7CgkJCWlmIF9lc2NEYXRhW2Fzc2V0XS5pc0RpciB7CgkJCQljb250aW51ZQoJCQl9IGVsc2UgaWYgc3RyaW5ndXRpbC5IYXNBbnlQcmVmaXgoYXNzZXQsIFNraXBBc3NldHMuLi4pIHsKCQkJCWNvbnRpbnVlCgkJCX0KCQkJaWYgZXJyIDo9IHJlbmRlclJlcXVlc3RBbmRXcml0ZUZpbGUob3B0aW9ucy5UYXJnZXREaXIsIGFzc2V0LCBzLCBgYCk7IGVyciAhPSBuaWwgewoJCQkJcmV0dXJuIGVycgoJCQl9CgkJfQoJCWlmIGVyciA6PSByZW5kZXJSZXF1ZXN0QW5kV3JpdGVGaWxlKG9wdGlvbnMuVGFyZ2V0RGlyLCBgL21vZHVsZS5qc29uYCwgcywgYGApOyBlcnIgIT0gbmlsIHsKCQkJcmV0dXJuIGVycgoJCX0KCQlyZXR1cm4gbW9kdWxlLldhbGsoZnVuYyhwa2cgKlBhY2thZ2UpIGVycm9yIHsKCQkJbG9nLkluZm9mKCJwYWNrYWdlOiAlcyIsIHBrZy5OYW1lKQoJCQlpZiBlcnIgOj0gcmVuZGVyUmVxdWVzdEFuZFdyaXRlRmlsZShvcHRpb25zLlRhcmdldERpciwgYC9wYWNrYWdlLmpzb24/cGFja2FnZT1gK3BrZy5OYW1lLCBzLCBmaWxlcGF0aC5Kb2luKGBwa2dgLCBwa2cuSW1wb3J0UGF0aCtgLmpzb25gKSk7IGVyciAhPSBuaWwgewoJCQkJcmV0dXJuIGVycgoJCQl9CgkJCXJldHVybiByZW5kZXJSZXF1ZXN0QW5kV3JpdGVGaWxlKG9wdGlvbnMuVGFyZ2V0RGlyLCBgL3BrZz9wYWNrYWdlPWArcGtnLk5hbWUsIHMsIGZpbGVwYXRoLkpvaW4oYHBrZ2AsIHBrZy5JbXBvcnRQYXRoKSkKCQl9KQoJfSkKfQ==",
                "IsPackageLevel": true
            }
        ],
        "Types": {
            "Arg": {
                "Name": "Arg",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Name",
                        "Type": "string"
                    },
                    {
                        "Name": "Type",
                        "Type": "string"
                    }
                ],
                "Comment": "Represents a function argument or return value.",
                "Source": "dHlwZSBBcmcgc3RydWN0IHsKCU5hbWUgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKCVR5cGUgc3RyaW5nCn0vLyBSZXByZXNlbnRzIGEgZnVuY3Rpb24gYXJndW1lbnQgb3IgcmV0dXJuIHZhbHVlLgo="
            },
            "Field": {
                "Name": "Field",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Name",
                        "Type": "string"
                    },
                    {
                        "Name": "Type",
                        "Type": "string"
                    },
                    {
                        "Name": "Parent",
                        "Type": "*Type"
                    },
                    {
                        "Name": "Comment",
                        "Type": "string"
                    }
                ],
                "Comment": "Represents a single field in a struct declaration.",
                "Source": "dHlwZSBGaWVsZCBzdHJ1Y3QgewoJTmFtZSAgICBzdHJpbmcKCVR5cGUgICAgc3RyaW5nCglQYXJlbnQgICpUeXBlICBganNvbjoiLSJgCglDb21tZW50IHN0cmluZyBganNvbjoiLG9taXRlbXB0eSJgCn0vLyBSZXByZXNlbnRzIGEgc2luZ2xlIGZpZWxkIGluIGEgc3RydWN0IGRlY2xhcmF0aW9uLgo="
            },
            "File": {
                "Name": "File",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Name",
                        "Type": "string"
                    },
                    {
                        "Name": "Package",
                        "Type": "*Package"
                    },
                    {
                        "Name": "Imports",
                        "Type": "[]Import"
                    },
                    {
                        "Name": "MainFunction",
                        "Type": "bool"
                    },
                    {
                        "Name": "Size",
                        "Type": "int64"
                    },
                    {
                        "Name": "LineCount",
                        "Type": "int"
                    },
                    {
                        "Name": "SourceLineCount",
                        "Type": "int"
                    },
                    {
                        "Name": "FunctionCount",
                        "Type": "int"
                    },
                    {
                        "Name": "TypeCount",
                        "Type": "int"
                    },
                    {
                        "Name": "ConstantCount",
                        "Type": "int"
                    },
                    {
                        "Name": "VariableCount",
                        "Type": "int"
                    }
                ],
                "Comment": "Represents a Golang source file.",
                "Source": "dHlwZSBGaWxlIHN0cnVjdCB7CglOYW1lICAgIHN0cmluZwoJUGFja2FnZSAqUGFja2FnZSBganNvbjoiLSJgCglJbXBvcnRzIFsgLy8gUmVwcmVzZW50cyBhIEdvbGFuZyBzb3VyY2UgZmlsZS4KCV1JbXBvcnQgYGpzb246IixvbWl0ZW1wdHkiYAoJTWFpbkZ1bmN0aW9uICAgIGJvb2wgYGpzb246IixvbWl0ZW1wdHkiYAoJU2l6ZSAgICAgICAgICAgIGludDY0CglMaW5lQ291bnQgICAgICAgaW50CglTb3VyY2VMaW5lQ291bnQgaW50CglGdW5jdGlvbkNvdW50ICAgaW50CglUeXBlQ291bnQgICAgICAgaW50CglDb25zdGFudENvdW50ICAgaW50CglWYXJpYWJsZUNvdW50ICAgaW50Cgp9Cg==",
                "HasUnexportedFields": true
            },
            "Import": {
                "Name": "Import",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "PackageName",
                        "Type": "string"
                    },
                    {
                        "Name": "Alias",
                        "Type": "string"
                    }
                ],
                "Comment": "Represents an import declaration for a dependent package.",
                "Source": "dHlwZSBJbXBvcnQgc3RydWN0IHsKCVBhY2thZ2VOYW1lIHN0cmluZwoJQWxpYXMgICAgICAgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKfS8vIFJlcHJlc2VudHMgYW4gaW1wb3J0IGRlY2xhcmF0aW9uIGZvciBhIGRlcGVuZGVudCBwYWNrYWdlLgo="
            },
            "Metadata": {
                "Name": "Metadata",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Title",
                        "Type": "string"
                    },
                    {
                        "Name": "Version",
                        "Type": "string"
                    },
                    {
                        "Name": "GeneratorVersion",
                        "Type": "string"
                    },
                    {
                        "Name": "URL",
                        "Type": "string"
                    }
                ],
                "Source": "dHlwZSBNZXRhZGF0YSBzdHJ1Y3QgewoJVGl0bGUgICAgICAgICAgICBzdHJpbmcKCVZlcnNpb24gICAgICAgICAgc3RyaW5nCglHZW5lcmF0b3JWZXJzaW9uIHN0cmluZwoJVVJMICAgICAgICAgICAgICBzdHJpbmcKfQ=="
            },
            "Method": {
                "Name": "Method",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Parent",
                        "Type": "*Type",
                        "Comment": "The parent struct this method is attached to."
                    },
                    {
                        "Name": "File",
                        "Type": "*File",
                        "Comment": "The File this declaration appears in."
                    },
                    {
                        "Name": "Name",
                        "Type": "string",
                        "Comment": "The name of the method."
                    },
                    {
                        "Name": "Label",
                        "Type": "string",
                        "Comment": "The name of an example method, as extracted from the method name."
                    },
                    {
                        "Name": "For",
                        "Type": "string",
                        "Comment": "The name of the function the example is for."
                    },
                    {
                        "Name": "ExpectedOutput",
                        "Type": "string",
                        "Comment": "The expected output of the method (for examples)"
                    },
                    {
                        "Name": "Comment",
                        "Type": "string",
                        "Comment": "The comment text describing the function."
                    },
                    {
                        "Name": "PointerReceiver",
                        "Type": "bool",
                        "Comment": "Whether this method is attached to a Struct instance or Struct pointer."
                    },
                    {
                        "Name": "ReceiverName",
                        "Type": "string",
                        "Comment": "The variable used to access the receiver instance."
                    },
                    {
                        "Name": "Arguments",
                        "Type": "[]Arg",
                        "Comment": "List of arguments this method accepts."
                    },
                    {
                        "Name": "Returns",
                        "Type": "[]Arg",
                        "Comment": "List of outputs this method returns."
                    },
                    {
                        "Name": "Signature",
                        "Type": "string",
                        "Comment": "Return a source representation of the function signature"
                    },
                    {
                        "Name": "Source",
                        "Type": "string",
                        "Comment": "Optional full text of the function's source."
                    },
                    {
                        "Name": "IsPackageLevel",
                        "Type": "bool",
                        "Comment": "Return whether this is a package-level function or struct method."
                    }
                ],
                "Comment": "Represents a function declaration, both package-level and struct methods.",
                "Source": "dHlwZSBNZXRob2Qgc3RydWN0IHsKCVBhcmVudCAgICAgICAgICAqVHlwZSBganNvbjoiLSJgCglGaWxlICAgICAgICAgICAgKkZpbGUgYGpzb246Ii0iYAoJTmFtZSAgICAgICAgICAgIHN0cmluZwoJTGFiZWwgICAgICAgICAgIHN0cmluZyBganNvbjoiLG9taXRlbXB0eSJgCglGb3IgICAgICAgICAgICAgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKCUV4cGVjdGVkT3V0cHV0ICBzdHJpbmcgYGpzb246IixvbWl0ZW1wdHkiYAoJQ29tbWVudCAgICAgICAgIHN0cmluZyBganNvbjoiLG9taXRlbXB0eSJgCglQb2ludGVyUmVjZWl2ZXIgYm9vbCAgIGBqc29uOiIsb21pdGVtcHR5ImAKCVJlY2VpdmVyTmFtZSAgICBzdHJpbmcgYGpzb246IixvbWl0ZW1wdHkiYAoJQXJndW1lbnRzICAgICAgIFsgLy8gUmVwcmVzZW50cyBhIGZ1bmN0aW9uIGRlY2xhcmF0aW9uLCBib3RoIHBhY2thZ2UtbGV2ZWwgYW5kIHN0cnVjdCBtZXRob2RzLgoJLy8gTGlzdCBvZiBhcmd1bWVudHMgdGhpcyBtZXRob2QgYWNjZXB0cy4KCV1BcmcgYGpzb246IixvbWl0ZW1wdHkiYAoJUmV0dXJucyBbIC8vIExpc3Qgb2Ygb3V0cHV0cyB0aGlzIG1ldGhvZCByZXR1cm5zLgoJXUFyZyAgICBganNvbjoiLG9taXRlbXB0eSJgCglTaWduYXR1cmUgICAgICBzdHJpbmcgYGpzb246IixvbWl0ZW1wdHkiYAoJU291cmNlICAgICAgICAgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKCUlzUGFja2FnZUxldmVsIGJvb2wKfS8vIFJldHVybiBhIHNvdXJjZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlCi8vIFJldHVybiB3aGV0aGVyIHRoaXMgaXMgYSBwYWNrYWdlLWxldmVsIGZ1bmN0aW9uIG9yIHN0cnVjdCBtZXRob2QuCg=="
            },
            "Module": {
                "Name": "Module",
                "MetaType": "struct",
                "Methods": [
                    {
                        "Name": "Walk",
                        "PointerReceiver": true,
                        "ReceiverName": "self",
                        "Arguments": [
                            {
                                "Name": "fn",
                                "Type": "ModuleWalkFunc"
                            }
                        ],
                        "Returns": [
                            {
                                "Type": "error"
                            }
                        ],
                        "Signature": "Walk(fn ModuleWalkFunc) error",
                        "IsPackageLevel": false
                    },
                    {
                        "Name": "ScanDir",
                        "Arguments": [
                            {
                                "Name": "options",
                                "Type": "*ScanOptions"
                            }
                        ],
                        "Returns": [
                            {
                                "Type": "*Module"
                            },
                            {
                                "Type": "error"
                            }
                        ],
                        "Signature": "ScanDir(options *ScanOptions) (*Module, error)",
                        "Source": "ewoJaWYgb3B0aW9ucyA9PSBuaWwgewoJCW9wdGlvbnMgPSBuZXcoU2Nhbk9wdGlvbnMpCgl9CglkZWZhdWx0cy5TZXREZWZhdWx0cyhvcHRpb25zKQoJaWYgcGtnLCBlcnIgOj0gTG9hZFBhY2thZ2Uob3B0aW9ucy5TdGFydERpcik7IGVyciA9PSBuaWwgewoJCWVuYyA6PSBqc29uLk5ld0VuY29kZXIob3MuU3Rkb3V0KQoJCWVuYy5TZXRJbmRlbnQoYGAsIGAgICAgYCkKCQl2YXIgbW9kID0gJk1vZHVsZXtNZXRhZGF0YTogTWV0YWRhdGF7VGl0bGU6IGZpbGVwYXRoLkJhc2UocGtnLlVSTCksIFVSTDogcGtnLlVSTCwgR2VuZXJhdG9yVmVyc2lvbjogVmVyc2lvbn0sIFBhY2thZ2U6IHBrZ30KCQlpZiBvcHRpb25zLlZlcnNpb24gPT0gYGAgewoJCQlmb3IgXywgYyA6PSByYW5nZSBwa2cuQ29uc3RhbnRzIHsKCQkJCWlmIGMuTmFtZSA9PSBvcHRpb25zLlZlcnNpb25Db25zdE5hbWUgewoJCQkJCW1vZC5NZXRhZGF0YS5WZXJzaW9uID0gYy5WYWx1ZQoJCQkJCWJyZWFrCgkJCQl9CgkJCX0KCQl9IGVsc2UgewoJCQltb2QuTWV0YWRhdGEuVmVyc2lvbiA9IG9wdGlvbnMuVmVyc2lvbgoJCX0KCQlpZiBlcnIgOj0gbW9kLldhbGsoZnVuYyhwa2cgKlBhY2thZ2UpIGVycm9yIHsKCQkJbW9kLlBhY2thZ2VMaXN0ID0gYXBwZW5kKG1vZC5QYWNrYWdlTGlzdCwgcGtnLlBhY2thZ2VTdW1tYXJ5KQoJCQlzb3J0LlNsaWNlKG1vZC5QYWNrYWdlTGlzdCwgZnVuYyhpIGludCwgaiBpbnQpIGJvb2wgewoJCQkJcmV0dXJuIG1vZC5QYWNrYWdlTGlzdFtpXS5JbXBvcnRQYXRoIDwgbW9kLlBhY2thZ2VMaXN0W2pdLkltcG9ydFBhdGgKCQkJfSkKCQkJcmV0dXJuIG5pbAoJCX0pOyBlcnIgPT0gbmlsIHsKCQkJcmV0dXJuIG1vZCwgbmlsCgkJfSBlbHNlIHsKCQkJcmV0dXJuIG5pbCwgZXJyCgkJfQoJfSBlbHNlIHsKCQlyZXR1cm4gbmlsLCBlcnIKCX0KfQ==",
                        "IsPackageLevel": true
                    }
                ],
                "Fields": [
                    {
                        "Name": "Metadata",
                        "Type": "Metadata"
                    },
                    {
                        "Name": "PackageList",
                        "Type": "[]PackageSummary"
                    },
                    {
                        "Name": "Package",
                        "Type": "*Package"
                    }
                ],
                "Source": "dHlwZSBNb2R1bGUgc3RydWN0IHsKCU1ldGFkYXRhICAgIE1ldGFkYXRhCglQYWNrYWdlTGlzdCBbXVBhY2thZ2VTdW1tYXJ5CglQYWNrYWdlICAgICAqUGFja2FnZQp9"
            },
            "ModuleWalkFunc": {
                "Name": "ModuleWalkFunc",
                "Source": "dHlwZSBNb2R1bGVXYWxrRnVuYyBmdW5jKHBrZyAqUGFja2FnZSkgZXJyb3I="
            },
            "Package": {
                "Name": "Package",
                "MetaType": "struct",
                "Methods": [
                    {
                        "Name": "LoadPackage",
                        "Arguments": [
                            {
                                "Name": "parentDir",
                                "Type": "string"
                            }
                        ],
                        "Returns": [
                            {
                                "Type": "*Package"
                            },
                            {
                                "Type": "error"
                            }
                        ],
                        "Signature": "LoadPackage(parentDir string) (*Package, error)",
                        "Source": "ewoJcmV0dXJuIGxvYWRQYWNrYWdlKHBhcmVudERpciwgYGApCn0=",
                        "IsPackageLevel": true
                    }
                ],
                "Fields": [
                    {
                        "Name": "Files",
                        "Type": "[]*File"
                    },
                    {
                        "Name": "Constants",
                        "Type": "[]Value"
                    },
                    {
                        "Name": "Variables",
                        "Type": "[]Value"
                    },
                    {
                        "Name": "Functions",
                        "Type": "[]*Method"
                    },
                    {
                        "Name": "Examples",
                        "Type": "[]*Method"
                    },
                    {
                        "Name": "Tests",
                        "Type": "[]*Method"
                    },
                    {
                        "Name": "Types",
                        "Type": "map[string]*Type"
                    },
                    {
                        "Name": "Packages",
                        "Type": "[]*Package"
                    }
                ],
                "Source": "dHlwZSBQYWNrYWdlIHN0cnVjdCB7CglQYWNrYWdlU3VtbWFyeQoJRmlsZXMgICAgIFtdKkZpbGUKCUNvbnN0YW50cyBbXVZhbHVlICAgICAgICAgIGBqc29uOiIsb21pdGVtcHR5ImAKCVZhcmlhYmxlcyBbXVZhbHVlICAgICAgICAgIGBqc29uOiIsb21pdGVtcHR5ImAKCUZ1bmN0aW9ucyBbXSpNZXRob2QgICAgICAgIGBqc29uOiIsb21pdGVtcHR5ImAKCUV4YW1wbGVzICBbXSpNZXRob2QgICAgICAgIGBqc29uOiIsb21pdGVtcHR5ImAKCVRlc3RzICAgICBbXSpNZXRob2QgICAgICAgIGBqc29uOiIsb21pdGVtcHR5ImAKCVR5cGVzICAgICBtYXBbc3RyaW5nXSpUeXBlIGBqc29uOiIsb21pdGVtcHR5ImAKCVBhY2thZ2VzICBbXSpQYWNrYWdlICAgICAgIGBqc29uOiIsb21pdGVtcHR5ImAKCn0K",
                "HasUnexportedFields": true
            },
            "PackageSummary": {
                "Name": "PackageSummary",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Name",
                        "Type": "string"
                    },
                    {
                        "Name": "CanonicalImportPath",
                        "Type": "string"
                    },
                    {
                        "Name": "ImportPath",
                        "Type": "string"
                    },
                    {
                        "Name": "ParentPackage",
                        "Type": "string"
                    },
                    {
                        "Name": "URL",
                        "Type": "string"
                    },
                    {
                        "Name": "Synopsis",
                        "Type": "string"
                    },
                    {
                        "Name": "MainFunction",
                        "Type": "bool"
                    },
                    {
                        "Name": "CommentWordCount",
                        "Type": "int"
                    },
                    {
                        "Name": "LineCount",
                        "Type": "int"
                    },
                    {
                        "Name": "SourceLineCount",
                        "Type": "int"
                    },
                    {
                        "Name": "FunctionCount",
                        "Type": "int"
                    },
                    {
                        "Name": "TypeCount",
                        "Type": "int"
                    },
                    {
                        "Name": "ConstantCount",
                        "Type": "int"
                    },
                    {
                        "Name": "VariableCount",
                        "Type": "int"
                    },
                    {
                        "Name": "Statistics",
                        "Type": "Rollup"
                    }
                ],
                "Source": "dHlwZSBQYWNrYWdlU3VtbWFyeSBzdHJ1Y3QgewoJTmFtZSAgICAgICAgICAgICAgICBzdHJpbmcKCUNhbm9uaWNhbEltcG9ydFBhdGggc3RyaW5nCglJbXBvcnRQYXRoICAgICAgICAgIHN0cmluZwoJUGFyZW50UGFja2FnZSAgICAgICBzdHJpbmcKCVVSTCAgICAgICAgICAgICAgICAgc3RyaW5nCglTeW5vcHNpcyAgICAgICAgICAgIHN0cmluZwoJTWFpbkZ1bmN0aW9uICAgICAgICBib29sCglDb21tZW50V29yZENvdW50ICAgIGludAoJTGluZUNvdW50ICAgICAgICAgICBpbnQKCVNvdXJjZUxpbmVDb3VudCAgICAgaW50CglGdW5jdGlvbkNvdW50ICAgICAgIGludAoJVHlwZUNvdW50ICAgICAgICAgICBpbnQKCUNvbnN0YW50Q291bnQgICAgICAgaW50CglWYXJpYWJsZUNvdW50ICAgICAgIGludAoJU3RhdGlzdGljcyAgICAgICAgICBSb2xsdXAKfQ=="
            },
            "RenderOptions": {
                "Name": "RenderOptions",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "TargetDir",
                        "Type": "string"
                    },
                    {
                        "Name": "Properties",
                        "Type": "map[string]interface{}"
                    }
                ],
                "Source": "dHlwZSBSZW5kZXJPcHRpb25zIHN0cnVjdCB7CglUYXJnZXREaXIgIHN0cmluZyBgZGVmYXVsdDoiZG9jcyJgCglQcm9wZXJ0aWVzIG1hcFtzdHJpbmddaW50ZXJmYWNle30KfQ=="
            },
            "Rollup": {
                "Name": "Rollup",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Mean",
                        "Type": "float64"
                    },
                    {
                        "Name": "StdDev",
                        "Type": "float64"
                    },
                    {
                        "Name": "GeometricMean",
                        "Type": "float64"
                    },
                    {
                        "Name": "HarmonicMean",
                        "Type": "float64"
                    },
                    {
                        "Name": "Median",
                        "Type": "float64"
                    },
                    {
                        "Name": "Minimum",
                        "Type": "float64"
                    },
                    {
                        "Name": "Maximum",
                        "Type": "float64"
                    }
                ],
                "Comment": "Represents statistical rollups of sets of numbers.",
                "Source": "dHlwZSBSb2xsdXAgc3RydWN0IHsKCU1lYW4gICAgICAgICAgZmxvYXQ2NAoJU3RkRGV2ICAgICAgICBmbG9hdDY0CglHZW9tZXRyaWNNZWFuIGZsb2F0NjQKCUhhcm1vbmljTWVhbiAgZmxvYXQ2NAoJTWVkaWFuICAgICAgICBmbG9hdDY0CglNaW5pbXVtICAgICAgIGZsb2F0NjQKCU1heGltdW0gICAgICAgZmxvYXQ2NAp9Ly8gUmVwcmVzZW50cyBzdGF0aXN0aWNhbCByb2xsdXBzIG9mIHNldHMgb2YgbnVtYmVycy4K"
            },
            "ScanOptions": {
                "Name": "ScanOptions",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Version",
                        "Type": "string"
                    },
                    {
                        "Name": "StartDir",
                        "Type": "string"
                    },
                    {
                        "Name": "VersionConstName",
                        "Type": "string"
                    }
                ],
                "Source": "dHlwZSBTY2FuT3B0aW9ucyBzdHJ1Y3QgewoJVmVyc2lvbiAgICAgICAgICBzdHJpbmcKCVN0YXJ0RGlyICAgICAgICAgc3RyaW5nIGBkZWZhdWx0OiIuImAKCVZlcnNpb25Db25zdE5hbWUgc3RyaW5nIGBkZWZhdWx0OiJWZXJzaW9uImAKfQ=="
            },
            "Type": {
                "Name": "Type",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "File",
                        "Type": "*File"
                    },
                    {
                        "Name": "Name",
                        "Type": "string"
                    },
                    {
                        "Name": "MetaType",
                        "Type": "string"
                    },
                    {
                        "Name": "Methods",
                        "Type": "[]*Method"
                    },
                    {
                        "Name": "Fields",
                        "Type": "[]*Field"
                    },
                    {
                        "Name": "Comment",
                        "Type": "string"
                    },
                    {
                        "Name": "Source",
                        "Type": "string"
                    },
                    {
                        "Name": "HasUnexportedFields",
                        "Type": "bool"
                    }
                ],
                "Comment": "Represents a type declaration, including all of its constituent fields and methods for structs.",
                "Source": "dHlwZSBUeXBlIHN0cnVjdCB7CglGaWxlICAgICAqRmlsZSBganNvbjoiLSJgCglOYW1lICAgICBzdHJpbmcKCU1ldGFUeXBlIHN0cmluZyBganNvbjoiLG9taXRlbXB0eSJgCglNZXRob2RzICBbIC8vIFJlcHJlc2VudHMgYSB0eXBlIGRlY2xhcmF0aW9uLCBpbmNsdWRpbmcgYWxsIG9mIGl0cyBjb25zdGl0dWVudCBmaWVsZHMgYW5kIG1ldGhvZHMgZm9yIHN0cnVjdHMuCgldKk1ldGhvZCBganNvbjoiLG9taXRlbXB0eSJgCglGaWVsZHMgICAgICAgICAgICAgIFtdKkZpZWxkIGBqc29uOiIsb21pdGVtcHR5ImAKCUNvbW1lbnQgICAgICAgICAgICAgc3RyaW5nICAgYGpzb246IixvbWl0ZW1wdHkiYAoJU291cmNlICAgICAgICAgICAgICBzdHJpbmcgICBganNvbjoiLG9taXRlbXB0eSJgCglIYXNVbmV4cG9ydGVkRmllbGRzIGJvb2wgICAgIGBqc29uOiIsb21pdGVtcHR5ImAKfQ=="
            },
            "Value": {
                "Name": "Value",
                "MetaType": "struct",
                "Fields": [
                    {
                        "Name": "Name",
                        "Type": "string"
                    },
                    {
                        "Name": "Type",
                        "Type": "string"
                    },
                    {
                        "Name": "Immutable",
                        "Type": "bool"
                    },
                    {
                        "Name": "Expression",
                        "Type": "string"
                    },
                    {
                        "Name": "Value",
                        "Type": "string"
                    },
                    {
                        "Name": "Comment",
                        "Type": "string"
                    }
                ],
                "Comment": "Represents a constant or variable declaration.",
                "Source": "dHlwZSBWYWx1ZSBzdHJ1Y3QgewoJTmFtZSAgICAgICBzdHJpbmcKCVR5cGUgICAgICAgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKCUltbXV0YWJsZSAgYm9vbCAgIGBqc29uOiIsb21pdGVtcHR5ImAKCUV4cHJlc3Npb24gc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKCVZhbHVlICAgICAgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKCUNvbW1lbnQgICAgc3RyaW5nIGBqc29uOiIsb21pdGVtcHR5ImAKfS8vIFJlcHJlc2VudHMgYSBjb25zdGFudCBvciB2YXJpYWJsZSBkZWNsYXJhdGlvbi4K"
            }
        }
    }
}
